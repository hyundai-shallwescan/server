<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
 * 주차 Mybatis 매퍼
 * @author 남진수
 * @since 2024.08.28
 * @version 1.0
 *
 * <pre>
 * 수정일        수정자        수정내용
 * ==========  =========    =========
 * 2024.08.28  남진수        최초 생성
 * 2024.08.28  남진수        차량번호로 회원 아이디 조회
 * 2024.08.28  남진수        주차 기록 생성(입차처리)
 * 2024.08.28  남진수        주차 기록 수정(출차처리)
 * 2024.08.28  남진수        주차 기록 조회
 * 2024.08.28  남진수        결제 금액 조회
 * 2024.08.28  남진수        장바구니 금액 조회
 * </pre>
 -->

<mapper namespace="com.ite.sws.domain.parking.mapper.ParkingMapper">

    <!-- 차량번호로 회원 아이디 조회 -->
    <select id= "selectMemberIdByCarNumber" resultType="Long">
        SELECT MEMBER_ID
        FROM   MEMBER
        WHERE  CAR_NUMBER = #{carNumber}
    </select>

    <!-- 주차 기록 생성(입차처리) -->
    <insert id="insertParkingHistory" parameterType="ParkingHistoryVO">
        INSERT INTO   PARKING_HISTORY
                     (PARKING_HISTORY_ID,
                      MEMBER_ID,
                      CAR_NUMBER,
                      ENTRANCE_AT)
        VALUES       (SEQ_PARKING_HISTORY_ID.NEXTVAL,
                      #{memberId},
                      #{carNumber},
                      #{entranceAt})
    </insert>

    <!-- 주차 기록 수정(출차처리) -->
    <update id="updateParkingHistory" parameterType="ParkingHistoryVO">
        UPDATE PARKING_HISTORY
        SET    EXIT_AT = #{exitAt}
        WHERE  CAR_NUMBER = #{carNumber}
               AND EXIT_AT IS NULL
    </update>

    <!-- 주차 기록 조회 -->
    <select id="selectParkingHistoryByMemberId">
        SELECT ENTRANCE_AT,
               CAR_NUMBER
        FROM   PARKING_HISTORY
        WHERE  MEMBER_ID = #{memberId}
               AND EXIT_AT IS NULL
    </select>

    <!-- 결제 금액 조회 -->
    <select id="selectPaymentAmountByMemberId">
        SELECT   P.AMOUNT
        FROM     MEMBER M
                 JOIN CART C
                   ON M.MEMBER_ID = C.MEMBER_ID
                 JOIN PAYMENT P
                   ON C.CART_ID = P.CART_ID
        WHERE    M.MEMBER_ID = #{memberId}
                 AND NOT EXISTS (SELECT 1
                                 FROM PARKING_PAYMENT PP
                                 WHERE PP.PAYMENT_ID = P.PAYMENT_ID)
                 AND TRUNC(P.CREATED_AT) = TRUNC(SYSDATE)
    </select>

    <!-- 장바구니 금액 조회 -->
    <select id="selectCartItemListByMemberId">
        SELECT CI.QUANTITY,
               CI.IS_DELETED,
               P.PRICE
        FROM   MEMBER M
                   JOIN CART C
                     ON M.MEMBER_ID = C.MEMBER_ID
                   JOIN CART_ITEM CI
                     ON C.CART_ID = CI.CART_ID
                   JOIN PRODUCT P
                     ON P.PRODUCT_ID = CI.PRODUCT_ID
        WHERE  M.MEMBER_ID = #{memberId}
        AND C.STATUS = 'ACTIVE'
    </select>

</mapper>